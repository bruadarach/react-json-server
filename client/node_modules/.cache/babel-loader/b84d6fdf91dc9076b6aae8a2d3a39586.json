{"ast":null,"code":"var _jsxFileName = \"/Users/bruadarach/Desktop/react-contact-list/frontend-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\"; // import AddContact from \"./components/AddContact\";\n// import ContactList from \"./components/ContactList\";\n// import { data } from \"./data\";\n\nimport api from \"../src/api/contacts\";\nimport EditContact from \"./components/EditContact\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // const [contacts, setContacts] = useState(data);\n  const [contacts, setContacts] = useState([]);\n\n  const addContactHandler = async newContact => {\n    const request = { ...newContact\n    };\n    const response = await api.post(\"/contacts\", request); // setContacts([...contacts, newContact]);\n\n    setContacts([response.data, ...contacts]);\n  }; // useEffect(() => {\n  //   if (localStorage.getItem(\"contacts\")) {\n  //     const getData = JSON.parse(localStorage.getItem(\"contacts\"));\n  //     setContacts(getData);\n  //   }\n  // }, []);\n\n\n  const retrieveContacts = async () => {\n    const response = await api.get(\"/contacts\");\n    return response.data;\n  };\n\n  useEffect(() => {\n    // const getData = JSON.parse(localStorage.getItem(\"contacts\"));\n    // if (getData) setContacts(getData);\n    const getAllContents = async () => {\n      const allContacts = await retrieveContacts();\n      if (allContacts) setContacts(allContacts);\n    };\n\n    getAllContents();\n  }, []);\n  useEffect(() => {//localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const removeContactHandler = async id => {\n    await api.delete(`/contacts/${id}`);\n    const newContactList = contacts.filter(contact => {\n      return contact.id !== id;\n    });\n    setContacts(newContactList);\n  };\n\n  const updateContactHandler = () => {};\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {\n            contacts: contacts,\n            setContacts: setContacts,\n            addContactHandler: addContactHandler,\n            removeContactHandler: removeContactHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/edit\",\n          element: /*#__PURE__*/_jsxDEV(EditContact, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"WajkMADgk+4Cka/G5/8OzNt4WxA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","api","EditContact","BrowserRouter","Router","Routes","Route","Home","App","contacts","setContacts","addContactHandler","newContact","request","response","post","data","retrieveContacts","get","getAllContents","allContacts","removeContactHandler","id","delete","newContactList","filter","contact","updateContactHandler"],"sources":["/Users/bruadarach/Desktop/react-contact-list/frontend-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\n// import AddContact from \"./components/AddContact\";\n// import ContactList from \"./components/ContactList\";\n// import { data } from \"./data\";\nimport api from \"../src/api/contacts\";\nimport EditContact from \"./components/EditContact\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\n\nconst App = () => {\n  // const [contacts, setContacts] = useState(data);\n  const [contacts, setContacts] = useState([]);\n\n  const addContactHandler = async (newContact) => {\n    const request = { ...newContact };\n    const response = await api.post(\"/contacts\", request);\n    // setContacts([...contacts, newContact]);\n    setContacts([response.data, ...contacts]);\n  };\n\n  // useEffect(() => {\n  //   if (localStorage.getItem(\"contacts\")) {\n  //     const getData = JSON.parse(localStorage.getItem(\"contacts\"));\n  //     setContacts(getData);\n  //   }\n  // }, []);\n\n  const retrieveContacts = async () => {\n    const response = await api.get(\"/contacts\");\n    return response.data;\n  };\n\n  useEffect(() => {\n    // const getData = JSON.parse(localStorage.getItem(\"contacts\"));\n    // if (getData) setContacts(getData);\n    const getAllContents = async () => {\n      const allContacts = await retrieveContacts();\n      if (allContacts) setContacts(allContacts);\n    };\n\n    getAllContents();\n  }, []);\n\n  useEffect(() => {\n    //localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const removeContactHandler = async (id) => {\n    await api.delete(`/contacts/${id}`);\n    const newContactList = contacts.filter((contact) => {\n      return contact.id !== id;\n    });\n    setContacts(newContactList);\n  };\n\n  const updateContactHandler = () => {};\n\n  return (\n    <>\n      <Header />\n      <Router>\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              <Home\n                contacts={contacts}\n                setContacts={setContacts}\n                addContactHandler={addContactHandler}\n                removeContactHandler={removeContactHandler}\n              />\n            }\n          />\n        </Routes>\n        {/* <Route\n            path=\"/\"\n            element={\n              <AddContact\n                contacts={contacts}\n                setContacts={setContacts}\n                addContactHandler={addContactHandler}\n              />\n            }\n          />\n        </Routes>\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              <ContactList\n                contacts={contacts}\n                removeContactHandler={removeContactHandler}\n              />\n            }\n          />\n        </Routes> */}\n        <Routes>\n          <Route path=\"/edit\" element={<EditContact />} />\n        </Routes>\n      </Router>\n    </>\n  );\n};\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB,C,CACA;AACA;AACA;;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,OAAOC,IAAP,MAAiB,cAAjB;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAChB;EACA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;;EAEA,MAAMa,iBAAiB,GAAG,MAAOC,UAAP,IAAsB;IAC9C,MAAMC,OAAO,GAAG,EAAE,GAAGD;IAAL,CAAhB;IACA,MAAME,QAAQ,GAAG,MAAMb,GAAG,CAACc,IAAJ,CAAS,WAAT,EAAsBF,OAAtB,CAAvB,CAF8C,CAG9C;;IACAH,WAAW,CAAC,CAACI,QAAQ,CAACE,IAAV,EAAgB,GAAGP,QAAnB,CAAD,CAAX;EACD,CALD,CAJgB,CAWhB;EACA;EACA;EACA;EACA;EACA;;;EAEA,MAAMQ,gBAAgB,GAAG,YAAY;IACnC,MAAMH,QAAQ,GAAG,MAAMb,GAAG,CAACiB,GAAJ,CAAQ,WAAR,CAAvB;IACA,OAAOJ,QAAQ,CAACE,IAAhB;EACD,CAHD;;EAKAjB,SAAS,CAAC,MAAM;IACd;IACA;IACA,MAAMoB,cAAc,GAAG,YAAY;MACjC,MAAMC,WAAW,GAAG,MAAMH,gBAAgB,EAA1C;MACA,IAAIG,WAAJ,EAAiBV,WAAW,CAACU,WAAD,CAAX;IAClB,CAHD;;IAKAD,cAAc;EACf,CATQ,EASN,EATM,CAAT;EAWApB,SAAS,CAAC,MAAM,CACd;EACD,CAFQ,EAEN,CAACU,QAAD,CAFM,CAAT;;EAIA,MAAMY,oBAAoB,GAAG,MAAOC,EAAP,IAAc;IACzC,MAAMrB,GAAG,CAACsB,MAAJ,CAAY,aAAYD,EAAG,EAA3B,CAAN;IACA,MAAME,cAAc,GAAGf,QAAQ,CAACgB,MAAT,CAAiBC,OAAD,IAAa;MAClD,OAAOA,OAAO,CAACJ,EAAR,KAAeA,EAAtB;IACD,CAFsB,CAAvB;IAGAZ,WAAW,CAACc,cAAD,CAAX;EACD,CAND;;EAQA,MAAMG,oBAAoB,GAAG,MAAM,CAAE,CAArC;;EAEA,oBACE;IAAA,wBACE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,MAAD;MAAA,wBACE,QAAC,MAAD;QAAA,uBACE,QAAC,KAAD;UACE,IAAI,EAAC,GADP;UAEE,OAAO,eACL,QAAC,IAAD;YACE,QAAQ,EAAElB,QADZ;YAEE,WAAW,EAAEC,WAFf;YAGE,iBAAiB,EAAEC,iBAHrB;YAIE,oBAAoB,EAAEU;UAJxB;YAAA;YAAA;YAAA;UAAA;QAHJ;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,eAoCE,QAAC,MAAD;QAAA,uBACE,QAAC,KAAD;UAAO,IAAI,EAAC,OAAZ;UAAoB,OAAO,eAAE,QAAC,WAAD;YAAA;YAAA;YAAA;UAAA;QAA7B;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QApCF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADF;AA6CD,CA7FD;;GAAMb,G;;KAAAA,G;AA+FN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}