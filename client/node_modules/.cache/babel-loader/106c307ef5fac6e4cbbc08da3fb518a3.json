{"ast":null,"code":"var _jsxFileName = \"/Users/bruadarach/Desktop/react-contact-list/frontend-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport AddContact from \"./components/AddContact\";\nimport ContactList from \"./components/ContactList\";\nimport { data } from \"./data\";\nimport api from \"../src/api/contacts\";\nimport EditContact from \"./components/EditContact\"; // import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [contacts, setContacts] = useState(data);\n\n  const addContactHandler = async newContact => {\n    const request = { ...newContact\n    };\n    const response = await api.post(\"/contacts\", request); // setContacts([...contacts, newContact]);\n\n    setContacts([response.data, ...contacts]);\n  }; // useEffect(() => {\n  //   if (localStorage.getItem(\"contacts\")) {\n  //     const getData = JSON.parse(localStorage.getItem(\"contacts\"));\n  //     setContacts(getData);\n  //   }\n  // }, []);\n\n\n  const retrieveContacts = async () => {\n    const response = await api.get(\"/contacts\");\n    return response.data;\n  };\n\n  useEffect(() => {\n    // const getData = JSON.parse(localStorage.getItem(\"contacts\"));\n    // if (getData) setContacts(getData);\n    const getAllContents = async () => {\n      const allContacts = await retrieveContacts();\n      if (allContacts) setContacts(allContacts);\n    };\n\n    getAllContents();\n  }, []);\n  useEffect(() => {//localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const removeContactHandler = async id => {\n    await api.delete(`/contacts/${id}`);\n    const newContactList = contacts.filter(contact => {\n      return contact.id !== id;\n    });\n    setContacts(newContactList);\n  };\n\n  const updateContactHandler = () => {};\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddContact, {\n      contacts: contacts,\n      setContacts: setContacts,\n      addContactHandler: addContactHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n      contacts: contacts,\n      removeContactHandler: removeContactHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"NC4Do1TUZDVK5KWz4e7TfgMfME8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","AddContact","ContactList","data","api","EditContact","App","contacts","setContacts","addContactHandler","newContact","request","response","post","retrieveContacts","get","getAllContents","allContacts","removeContactHandler","id","delete","newContactList","filter","contact","updateContactHandler"],"sources":["/Users/bruadarach/Desktop/react-contact-list/frontend-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport AddContact from \"./components/AddContact\";\nimport ContactList from \"./components/ContactList\";\nimport { data } from \"./data\";\nimport api from \"../src/api/contacts\";\nimport EditContact from \"./components/EditContact\";\n// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nconst App = () => {\n  const [contacts, setContacts] = useState(data);\n\n  const addContactHandler = async (newContact) => {\n    const request = { ...newContact };\n    const response = await api.post(\"/contacts\", request);\n    // setContacts([...contacts, newContact]);\n    setContacts([response.data, ...contacts]);\n  };\n\n  // useEffect(() => {\n  //   if (localStorage.getItem(\"contacts\")) {\n  //     const getData = JSON.parse(localStorage.getItem(\"contacts\"));\n  //     setContacts(getData);\n  //   }\n  // }, []);\n\n  const retrieveContacts = async () => {\n    const response = await api.get(\"/contacts\");\n    return response.data;\n  };\n\n  useEffect(() => {\n    // const getData = JSON.parse(localStorage.getItem(\"contacts\"));\n    // if (getData) setContacts(getData);\n    const getAllContents = async () => {\n      const allContacts = await retrieveContacts();\n      if (allContacts) setContacts(allContacts);\n    };\n\n    getAllContents();\n  }, []);\n\n  useEffect(() => {\n    //localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const removeContactHandler = async (id) => {\n    await api.delete(`/contacts/${id}`);\n    const newContactList = contacts.filter((contact) => {\n      return contact.id !== id;\n    });\n    setContacts(newContactList);\n  };\n\n  const updateContactHandler = () => {};\n\n  return (\n    <>\n      <Header />\n      <AddContact\n        contacts={contacts}\n        setContacts={setContacts}\n        addContactHandler={addContactHandler}\n      />\n      <ContactList\n        contacts={contacts}\n        removeContactHandler={removeContactHandler}\n      />\n    </>\n  );\n};\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,WAAP,MAAwB,0BAAxB,C,CACA;;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAChB,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAACK,IAAD,CAAxC;;EAEA,MAAMM,iBAAiB,GAAG,MAAOC,UAAP,IAAsB;IAC9C,MAAMC,OAAO,GAAG,EAAE,GAAGD;IAAL,CAAhB;IACA,MAAME,QAAQ,GAAG,MAAMR,GAAG,CAACS,IAAJ,CAAS,WAAT,EAAsBF,OAAtB,CAAvB,CAF8C,CAG9C;;IACAH,WAAW,CAAC,CAACI,QAAQ,CAACT,IAAV,EAAgB,GAAGI,QAAnB,CAAD,CAAX;EACD,CALD,CAHgB,CAUhB;EACA;EACA;EACA;EACA;EACA;;;EAEA,MAAMO,gBAAgB,GAAG,YAAY;IACnC,MAAMF,QAAQ,GAAG,MAAMR,GAAG,CAACW,GAAJ,CAAQ,WAAR,CAAvB;IACA,OAAOH,QAAQ,CAACT,IAAhB;EACD,CAHD;;EAKAJ,SAAS,CAAC,MAAM;IACd;IACA;IACA,MAAMiB,cAAc,GAAG,YAAY;MACjC,MAAMC,WAAW,GAAG,MAAMH,gBAAgB,EAA1C;MACA,IAAIG,WAAJ,EAAiBT,WAAW,CAACS,WAAD,CAAX;IAClB,CAHD;;IAKAD,cAAc;EACf,CATQ,EASN,EATM,CAAT;EAWAjB,SAAS,CAAC,MAAM,CACd;EACD,CAFQ,EAEN,CAACQ,QAAD,CAFM,CAAT;;EAIA,MAAMW,oBAAoB,GAAG,MAAOC,EAAP,IAAc;IACzC,MAAMf,GAAG,CAACgB,MAAJ,CAAY,aAAYD,EAAG,EAA3B,CAAN;IACA,MAAME,cAAc,GAAGd,QAAQ,CAACe,MAAT,CAAiBC,OAAD,IAAa;MAClD,OAAOA,OAAO,CAACJ,EAAR,KAAeA,EAAtB;IACD,CAFsB,CAAvB;IAGAX,WAAW,CAACa,cAAD,CAAX;EACD,CAND;;EAQA,MAAMG,oBAAoB,GAAG,MAAM,CAAE,CAArC;;EAEA,oBACE;IAAA,wBACE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,UAAD;MACE,QAAQ,EAAEjB,QADZ;MAEE,WAAW,EAAEC,WAFf;MAGE,iBAAiB,EAAEC;IAHrB;MAAA;MAAA;MAAA;IAAA,QAFF,eAOE,QAAC,WAAD;MACE,QAAQ,EAAEF,QADZ;MAEE,oBAAoB,EAAEW;IAFxB;MAAA;MAAA;MAAA;IAAA,QAPF;EAAA,gBADF;AAcD,CA7DD;;GAAMZ,G;;KAAAA,G;AA+DN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}